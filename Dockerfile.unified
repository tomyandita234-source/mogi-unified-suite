# Unified Dockerfile for MogiApp Frontend
# Use Node.js 18 as base image
FROM node:18 AS base

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Development stage
FROM base AS development
# Set environment variables to fix rollup issue
ENV NODE_OPTIONS="--no-warnings"
# Remove package-lock.json to avoid npm bug
RUN rm -f package-lock.json
# Install dependencies with specific flags to avoid optional dependency issues
RUN npm install --no-optional --ignore-scripts
# Install rollup separately with the correct platform
RUN npm install @rollup/rollup-linux-x64-gnu --no-save
# Rebuild node-gyp modules
RUN npm rebuild
COPY . .
EXPOSE 8082
CMD ["npm", "run", "dev"]

# Build stage
FROM base AS build
# Set environment variables to fix rollup issue
ENV NODE_OPTIONS="--no-warnings"
# Remove package-lock.json to avoid npm bug
RUN rm -f package-lock.json
# Install dependencies with specific flags to avoid optional dependency issues
RUN npm install --no-optional --ignore-scripts
# Install rollup separately with the correct platform
RUN npm install @rollup/rollup-linux-x64-gnu --no-save
# Rebuild node-gyp modules
RUN npm rebuild
COPY . .
RUN npm run build

# Production stage
FROM node:18-alpine AS production
# Install serve to serve the static files
RUN npm install -g serve

# Set working directory
WORKDIR /app

# Copy package files and dist folder
COPY package*.json ./
COPY --from=build /app/dist ./dist

# Expose port
EXPOSE 80

# Serve the application
CMD ["serve", "-s", "dist", "-l", "80"]